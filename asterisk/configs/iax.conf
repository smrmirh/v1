; LOCAL SERVER : 10.98.21.10
;[SIAX]
;username=SIAX
;secret=admin
;host=54.38.240.251
;;host=251.ip-54-38-240
;port=8519
;type=friend
;context=from-switch
;qualify=yes
;forceencryption=yes
;encryption=aes128
;disallow=all
;allow=g729
;allow=g723
;trunk=yes

[general]
;bindport=8519
;externip=5.201.186.88
;localnet=10.98.21.0/24
;bindaddr=54.37.205.3    ; You can specify 'bindaddr' more than once to bind to
;iaxcompat=yes
;nochecksums=yes
;delayreject=yes
;amaflags=billing
;adsi=yes
;srvlookup=yes
;accountcode=lss0101
;language=en
;mohinterpret=default
;;bandwidth=low
;allow=all
;disallow=g723.1
disallow=lpc10
allow=g729
allow=g723
;allow=gsm

jitterbuffer=no
;maxjitterbuffer=1000
;maxjitterinterps=10
;resyncthreshold=1000
;jittertargetextra=40

;encryption=yes
;forceencryption=yes
;     (160 bytes per frame) * (800 calls) = 128000 bytes
;
; Once this limit is reached, calls may be dropped or begin to lose audio.
; Depending on the codec in use and number of channels to be supported this value
; may need to be raised, but in most cases the default value is large enough.
;
; trunkmaxsize = 128000 ; defaults to 128000 bytes, which supports up to 800
                        ; calls of ulaw at 20ms a frame.
; trunkmtu = 1240    ; trunk data will be sent in 1240 byte messages.
; trunkfreq=20    ; How frequently to send trunk msgs (in ms). This is 20ms by
                  ; default.

; trunktimestamps=yes

; Minimum and maximum amounts of time that IAX2 peers can request as a
; registration expiration interval (in seconds).
; minregexpire = 60
; maxregexpire = 60

; IAX2 helper threads

; Establishes the number of iax helper threads to handle I/O.
; iaxthreadcount = 10

; Establishes the number of extra dynamic threads that may be spawned to handle I/O
; iaxmaxthreadcount = 100
;
;register => marko:secretpass@tormenta.linux-support.net
;
; Register joe at remote host with no password
;
; You can enable authentication debugging to increase the amount of
; debugging traffic.
;
;authdebug = yes
;
; See https://wiki.asterisk.org/wiki/display/AST/IP+Quality+of+Service for a description of these parameters.
;tos=ef
;cos=5
;
;
;regcontext=iaxregistrations
;
autokill=yes
;
; codecpriority controls the codec negotiation of an inbound IAX2 call.
; This option is inherited to all user entities.  It can also be defined
; in each user entity separately which will override the setting in general.
;
; The valid values are:
;
; caller   - Consider the callers preferred order ahead of the host's.
; host     - Consider the host's preferred order ahead of the caller's.
; disabled - Disable the consideration of codec preference altogether.
;            (this is the original behaviour before preferences were added)
; reqonly  - Same as disabled, only do not consider capabilities if
;            the requested format is not available the call will only
;            be accepted if the requested format is available.
;
; The default value is 'host'
;
;codecpriority=host
;
; allowfwdownload controls whether this host will serve out firmware to
; IAX2 clients which request it.  This has only been used for the IAXy,
; and it has been recently proven that this firmware distribution method
; can be used as a source of traffic amplification attacks.  Also, the
; IAXy firmware has not been updated for at least 18 months, so unless
; you are provisioning IAXys in a secure network, we recommend that you
; leave this option to the default, off.
;
;allowfwdownload=yes

;rtcachefriends=yes ; Cache realtime friends by adding them to the internal list
                    ; just like friends added from the config file only on a
                    ; as-needed basis? (yes|no)

;rtsavesysname=yes  ; Save systemname in realtime database at registration
                    ; Default = no

;rtupdate=yes       ; Send registry updates to database using realtime? (yes|no)
                    ; If set to yes, when a IAX2 peer registers successfully,
                    ; the IP address, the origination port, the registration period,
                    ; and the username of the peer will be set to database via realtime.
                    ; If not present, defaults to 'yes'.

;rtautoclear=yes    ; Auto-Expire friends created on the fly on the same schedule
                    ; as if it had just registered? (yes|no|<seconds>)
                    ; If set to yes, when the registration expires, the friend will
                    ; vanish from the configuration until requested again.
                    ; If set to an integer, friends expire within this number of
                    ; seconds instead of the registration interval.

;rtignoreregexpire=yes ; When reading a peer from Realtime, if the peer's registration
                       ; has expired based on its registration interval, used the stored
                       ; address information regardless. (yes|no)

;parkinglot=edvina     ; Default parkinglot for IAX2 peers and users
                       ; This can also be configured per device
                       ; Parkinglots are defined in features.conf

;
; The following two options are used to disable call token validation for the
; purposes of interoperability with IAX2 endpoints that do not yet support it.
;
; Call token validation can be set as optional for a single IP address or IP
; address range by using the 'calltokenoptional' option. 'calltokenoptional' is
; only a global option.
;
;calltokenoptional=209.16.236.73/255.255.255.0
;
; By setting 'requirecalltoken=no', call token validation becomes optional for
; that peer/user.  By setting 'requirecalltoken=auto', call token validation
; is optional until a call token supporting peer registers successfully using
; call token validation.  This is used as an indication that from now on, we
; can require it from this peer.  So, requirecalltoken is internally set to yes.
; requirecalltoken may only be used in peer/user/friend definitions,
; not in the global scope.
; By default, 'requirecalltoken=yes'.
;
;requirecalltoken=no
;

;
; These options are used to limit the amount of call numbers allocated to a
; single IP address.  Before changing any of these values, it is highly encouraged
; to read the user guide associated with these options first.  In most cases, the
; default values for these options are sufficient.
;
; The 'maxcallnumbers' option limits the amount of call numbers allowed for each
; individual remote IP address.  Once an IP address reaches it's call number
; limit, no more new connections are allowed until the previous ones close.  This
; option can be used in a peer definition as well, but only takes effect for
; the IP of a dynamic peer after it completes registration.
;
;maxcallnumbers=512
;
; The 'maxcallnumbers_nonvalidated' is used to set the combined number of call
; numbers that can be allocated for connections where call token  validation
; has been disabled.  Unlike the 'maxcallnumbers' option, this limit is not
; separate for each individual IP address.  Any connection resulting in a
; non-call token validated call number being allocated contributes to this
; limit.  For use cases, see the call token user guide.  This option's
; default value of 8192 should be sufficient in most cases.
;
;maxcallnumbers_nonvalidated=1024
;
; The [callnumberlimits] section allows custom call number limits to be set
; for specific IP addresses and IP address ranges.  These limits take precedence
; over the global 'maxcallnumbers' option, but may still be overridden by a
; peer defined 'maxcallnumbers' entry.  Note that these limits take effect
; for every individual address within the range, not the range as a whole.
;
;[callnumberlimits]
;10.1.1.0/255.255.255.0 = 24
;10.1.2.0/255.255.255.0 = 32
;

; The shrinkcallerid function removes '(', ' ', ')', non-trailing '.', and '-' not
; in square brackets.  For example, the Caller*ID value 555.5555 becomes 5555555
; when this option is enabled.  Disabling this option results in no modification
; of the Caller*ID value, which is necessary when the Caller*ID represents something
; that must be preserved.  This option can only be used in the [general] section.
; By default this option is on.
;
;shrinkcallerid=yes     ; on by default

; Guest sections for unauthenticated connection attempts.  Just specify an
; empty secret, or provide no secret section.
;



